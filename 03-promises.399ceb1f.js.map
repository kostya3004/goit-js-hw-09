{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAYH,SAASC,cAAc,sBACnCG,EAASJ,SAASC,cAAc,wBAKtC,SAASI,EAAcC,EAAUC,GAa7B,OAZc,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAACH,WAAUS,MAAAR,IAGnBG,EAAO,CAACJ,WAAUS,MAAAR,G,GAEnBA,E,IAbPR,EAAKiB,iBAAiB,UAiBtB,SAAkBC,GAChBA,EAAMC,iBAEN,IADA,IAAIC,EAAeC,OAAOlB,EAAMmB,OACvBC,EAAI,EAAGA,GAAKlB,EAAOiB,MAAOC,GAAK,EACtCjB,EAAciB,EAAGH,GAChBI,MAAK,SAAAC,G,IAAElB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALT,MAChBW,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANJ,EAAM,M,IAGrEK,OAAM,SAAAN,G,IAAElB,EAAQkB,EAARlB,SAAUyB,EAAKP,EAALT,MACjBW,EAAA7B,GAAS8B,OAAOK,QAAQ,sBAAqCH,OAAfvB,EAAS,QAAYuB,OAANE,EAAM,M,IAIvEZ,GAAgBC,OAAOjB,EAAUkB,OAEnCJ,EAAMgB,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\n\n\nform.addEventListener(\"submit\", onSubmit);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({position, delay});\n      } else {\n        // Reject\n        reject({position, delay});\n      }\n    }, delay)\n  })\n    return promise;\n}\nfunction onSubmit(event) {\n  event.preventDefault(); \n  let currentDelay = Number(delay.value);\n  for (let i = 1; i <= amount.value; i += 1) {\n    createPromise(i, currentDelay) \n    .then(({position, delay}) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      // console.log(\"Yeeha\")\n      })\n      .catch(({position, delay}) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      // console.log(\"shit\")\n      });\n\n    currentDelay += Number(delayStep.value);\n  }\n  event.target.reset()\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","event","preventDefault","currentDelay","Number","value","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","target","reset"],"version":3,"file":"03-promises.399ceb1f.js.map"}